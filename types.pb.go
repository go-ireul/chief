// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

/*
Package chief is a generated protocol buffer package.

It is generated from these files:
	types.proto

It has these top-level messages:
	NewKeyRequest
	NewKeyResponse
	NewPoolRequest
	NewPoolResponse
*/
package chief

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NewKeyResponse_ErrorCode int32

const (
	NewKeyResponse_OK           NewKeyResponse_ErrorCode = 0
	NewKeyResponse_NOT_FOUND    NewKeyResponse_ErrorCode = 1
	NewKeyResponse_OUT_OF_RANGE NewKeyResponse_ErrorCode = 2
	NewKeyResponse_INTERNAL     NewKeyResponse_ErrorCode = -1
)

var NewKeyResponse_ErrorCode_name = map[int32]string{
	0:  "OK",
	1:  "NOT_FOUND",
	2:  "OUT_OF_RANGE",
	-1: "INTERNAL",
}
var NewKeyResponse_ErrorCode_value = map[string]int32{
	"OK":           0,
	"NOT_FOUND":    1,
	"OUT_OF_RANGE": 2,
	"INTERNAL":     -1,
}

func (x NewKeyResponse_ErrorCode) String() string {
	return proto.EnumName(NewKeyResponse_ErrorCode_name, int32(x))
}
func (NewKeyResponse_ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type NewPoolResponse_ErrorCode int32

const (
	NewPoolResponse_OK         NewPoolResponse_ErrorCode = 0
	NewPoolResponse_CONFLICT   NewPoolResponse_ErrorCode = 1
	NewPoolResponse_BAD_PARAMS NewPoolResponse_ErrorCode = 2
	NewPoolResponse_INTERNAL   NewPoolResponse_ErrorCode = -1
)

var NewPoolResponse_ErrorCode_name = map[int32]string{
	0:  "OK",
	1:  "CONFLICT",
	2:  "BAD_PARAMS",
	-1: "INTERNAL",
}
var NewPoolResponse_ErrorCode_value = map[string]int32{
	"OK":         0,
	"CONFLICT":   1,
	"BAD_PARAMS": 2,
	"INTERNAL":   -1,
}

func (x NewPoolResponse_ErrorCode) String() string {
	return proto.EnumName(NewPoolResponse_ErrorCode_name, int32(x))
}
func (NewPoolResponse_ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type NewKeyRequest struct {
	Name string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
}

func (m *NewKeyRequest) Reset()                    { *m = NewKeyRequest{} }
func (m *NewKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*NewKeyRequest) ProtoMessage()               {}
func (*NewKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NewKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NewKeyResponse struct {
	Code  NewKeyResponse_ErrorCode `protobuf:"varint,1,opt,name=Code,enum=chief.NewKeyResponse_ErrorCode" json:"Code,omitempty"`
	Name  string                   `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Value uint64                   `protobuf:"varint,3,opt,name=Value" json:"Value,omitempty"`
}

func (m *NewKeyResponse) Reset()                    { *m = NewKeyResponse{} }
func (m *NewKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*NewKeyResponse) ProtoMessage()               {}
func (*NewKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NewKeyResponse) GetCode() NewKeyResponse_ErrorCode {
	if m != nil {
		return m.Code
	}
	return NewKeyResponse_OK
}

func (m *NewKeyResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewKeyResponse) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type NewPoolRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	ShardStart uint64 `protobuf:"varint,2,opt,name=ShardStart" json:"ShardStart,omitempty"`
	ShardLen   uint64 `protobuf:"varint,3,opt,name=ShardLen" json:"ShardLen,omitempty"`
	StripeLen  uint64 `protobuf:"varint,4,opt,name=StripeLen" json:"StripeLen,omitempty"`
}

func (m *NewPoolRequest) Reset()                    { *m = NewPoolRequest{} }
func (m *NewPoolRequest) String() string            { return proto.CompactTextString(m) }
func (*NewPoolRequest) ProtoMessage()               {}
func (*NewPoolRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NewPoolRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewPoolRequest) GetShardStart() uint64 {
	if m != nil {
		return m.ShardStart
	}
	return 0
}

func (m *NewPoolRequest) GetShardLen() uint64 {
	if m != nil {
		return m.ShardLen
	}
	return 0
}

func (m *NewPoolRequest) GetStripeLen() uint64 {
	if m != nil {
		return m.StripeLen
	}
	return 0
}

type NewPoolResponse struct {
	Code    NewPoolResponse_ErrorCode `protobuf:"varint,1,opt,name=Code,enum=chief.NewPoolResponse_ErrorCode" json:"Code,omitempty"`
	Name    string                    `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Created bool                      `protobuf:"varint,3,opt,name=Created" json:"Created,omitempty"`
}

func (m *NewPoolResponse) Reset()                    { *m = NewPoolResponse{} }
func (m *NewPoolResponse) String() string            { return proto.CompactTextString(m) }
func (*NewPoolResponse) ProtoMessage()               {}
func (*NewPoolResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NewPoolResponse) GetCode() NewPoolResponse_ErrorCode {
	if m != nil {
		return m.Code
	}
	return NewPoolResponse_OK
}

func (m *NewPoolResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewPoolResponse) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func init() {
	proto.RegisterType((*NewKeyRequest)(nil), "chief.NewKeyRequest")
	proto.RegisterType((*NewKeyResponse)(nil), "chief.NewKeyResponse")
	proto.RegisterType((*NewPoolRequest)(nil), "chief.NewPoolRequest")
	proto.RegisterType((*NewPoolResponse)(nil), "chief.NewPoolResponse")
	proto.RegisterEnum("chief.NewKeyResponse_ErrorCode", NewKeyResponse_ErrorCode_name, NewKeyResponse_ErrorCode_value)
	proto.RegisterEnum("chief.NewPoolResponse_ErrorCode", NewPoolResponse_ErrorCode_name, NewPoolResponse_ErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Chief service

type ChiefClient interface {
	NewPool(ctx context.Context, in *NewPoolRequest, opts ...grpc.CallOption) (*NewPoolResponse, error)
	NewKey(ctx context.Context, in *NewKeyRequest, opts ...grpc.CallOption) (*NewKeyResponse, error)
}

type chiefClient struct {
	cc *grpc.ClientConn
}

func NewChiefClient(cc *grpc.ClientConn) ChiefClient {
	return &chiefClient{cc}
}

func (c *chiefClient) NewPool(ctx context.Context, in *NewPoolRequest, opts ...grpc.CallOption) (*NewPoolResponse, error) {
	out := new(NewPoolResponse)
	err := grpc.Invoke(ctx, "/chief.Chief/NewPool", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chiefClient) NewKey(ctx context.Context, in *NewKeyRequest, opts ...grpc.CallOption) (*NewKeyResponse, error) {
	out := new(NewKeyResponse)
	err := grpc.Invoke(ctx, "/chief.Chief/NewKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Chief service

type ChiefServer interface {
	NewPool(context.Context, *NewPoolRequest) (*NewPoolResponse, error)
	NewKey(context.Context, *NewKeyRequest) (*NewKeyResponse, error)
}

func RegisterChiefServer(s *grpc.Server, srv ChiefServer) {
	s.RegisterService(&_Chief_serviceDesc, srv)
}

func _Chief_NewPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChiefServer).NewPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chief.Chief/NewPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChiefServer).NewPool(ctx, req.(*NewPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chief_NewKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChiefServer).NewKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chief.Chief/NewKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChiefServer).NewKey(ctx, req.(*NewKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chief_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chief.Chief",
	HandlerType: (*ChiefServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewPool",
			Handler:    _Chief_NewPool_Handler,
		},
		{
			MethodName: "NewKey",
			Handler:    _Chief_NewKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types.proto",
}

func init() { proto.RegisterFile("types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0xbb, 0xd4, 0x80, 0x3d, 0x05, 0x6a, 0x8d, 0xa0, 0x42, 0xa8, 0x6a, 0x91, 0x7b, 0xe1,
	0xe4, 0x03, 0xb4, 0x52, 0xaf, 0xae, 0x81, 0x16, 0x41, 0xd7, 0x68, 0x6d, 0x72, 0xb5, 0x9c, 0xb0,
	0x11, 0x48, 0x04, 0x3b, 0x6b, 0xa3, 0x84, 0x4b, 0x3e, 0x59, 0xa4, 0x7c, 0xb4, 0x44, 0xac, 0xc1,
	0xfc, 0x11, 0x89, 0xe2, 0x93, 0xdf, 0xee, 0xdb, 0xd1, 0x6f, 0x9e, 0x1e, 0x7c, 0x4a, 0xd6, 0x11,
	0x8f, 0xcd, 0x48, 0x84, 0x49, 0x88, 0xf9, 0xab, 0xd9, 0x9c, 0x5f, 0x1b, 0x3f, 0xa0, 0x4c, 0xf9,
	0xdd, 0x90, 0xaf, 0x19, 0xbf, 0x5d, 0xf1, 0x38, 0x41, 0x04, 0x85, 0x06, 0x37, 0xbc, 0x4e, 0x9a,
	0xa4, 0xa5, 0x31, 0xf9, 0x6f, 0x3c, 0x12, 0xa8, 0xec, 0x5c, 0x71, 0x14, 0x2e, 0x63, 0x8e, 0x1d,
	0x50, 0xec, 0x70, 0x9a, 0xda, 0x2a, 0xed, 0xef, 0xa6, 0x9c, 0x66, 0x1e, 0x9b, 0xcc, 0x9e, 0x10,
	0xa1, 0xd8, 0xd8, 0x98, 0x34, 0x67, 0xb3, 0x73, 0xfb, 0xd9, 0x58, 0x85, 0xfc, 0x45, 0xb0, 0x58,
	0xf1, 0xfa, 0xc7, 0x26, 0x69, 0x29, 0x2c, 0x15, 0xc6, 0x10, 0xb4, 0xec, 0x31, 0x16, 0x20, 0xe7,
	0x0c, 0xf5, 0x0f, 0x58, 0x06, 0x8d, 0x3a, 0x9e, 0xdf, 0x77, 0x26, 0xb4, 0xab, 0x13, 0xd4, 0xa1,
	0xe4, 0x4c, 0x3c, 0xdf, 0xe9, 0xfb, 0xcc, 0xa2, 0x7f, 0x7b, 0x7a, 0x0e, 0x6b, 0xa0, 0x0e, 0xa8,
	0xd7, 0x63, 0xd4, 0x1a, 0xe9, 0xcf, 0xbb, 0x8f, 0x18, 0x0f, 0x92, 0x7e, 0x1c, 0x86, 0x8b, 0x37,
	0x96, 0xc4, 0x6f, 0x00, 0xee, 0x2c, 0x10, 0x53, 0x37, 0x09, 0x44, 0x22, 0x11, 0x15, 0x76, 0x70,
	0x82, 0x0d, 0x50, 0xa5, 0x1a, 0xf1, 0xe5, 0x96, 0x35, 0xd3, 0xf8, 0x15, 0x34, 0x37, 0x11, 0xf3,
	0x88, 0x6f, 0x2e, 0x15, 0x79, 0xb9, 0x3f, 0x30, 0x9e, 0x08, 0x7c, 0xce, 0x00, 0xb6, 0xf9, 0xfd,
	0x3c, 0xca, 0xaf, 0xb9, 0xcf, 0xef, 0xd0, 0xf5, 0xae, 0x00, 0xeb, 0x50, 0xb4, 0x05, 0x0f, 0x12,
	0x3e, 0x95, 0x58, 0x2a, 0xdb, 0x49, 0xe3, 0xdf, 0xb9, 0x10, 0x4b, 0xa0, 0xda, 0x0e, 0xed, 0x8f,
	0x06, 0xb6, 0xa7, 0x13, 0xac, 0x00, 0xfc, 0xb1, 0xba, 0xfe, 0xd8, 0x62, 0xd6, 0x7f, 0xf7, 0xd5,
	0x04, 0xdb, 0xf7, 0x90, 0xb7, 0x37, 0x80, 0xf8, 0x1b, 0x8a, 0x5b, 0x46, 0xac, 0x9d, 0x32, 0xcb,
	0x68, 0x1b, 0x5f, 0xce, 0xaf, 0x82, 0xbf, 0xa0, 0x90, 0xb6, 0x03, 0xab, 0x27, 0x65, 0x49, 0xdf,
	0xd5, 0xce, 0x56, 0xe8, 0xb2, 0x20, 0xdb, 0xda, 0x79, 0x09, 0x00, 0x00, 0xff, 0xff, 0x79, 0xa2,
	0x7b, 0xfb, 0xbc, 0x02, 0x00, 0x00,
}
